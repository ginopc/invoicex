/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.tnx.invoicex.sync;

import gestioneFatture.WizardDb;
import gestioneFatture.main;
import static gestioneFatture.main.debug;
import it.tnx.Db;
import static it.tnx.commons.DbUtils.sql;
import static it.tnx.commons.HttpUtils.getHttpClient;
import it.tnx.commons.SwingUtils;
import it.tnx.commons.SystemUtils;
import it.tnx.commons.cu;
import it.tnx.commons.dbu;
import it.tnx.invoicex.sync.Sync.DatiRegistrazione;
import static it.tnx.invoicex.sync.Sync.geturl;
import java.util.HashMap;
import java.util.Map;
import javax.swing.SwingUtilities;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.NameValuePair;
import org.apache.commons.httpclient.methods.GetMethod;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author Marco
 */
public class JDialogRegistraCient extends javax.swing.JDialog {

    public Integer idclient = null;
    public boolean esito = false;
    
    /**
     * Creates new form JDialogRegistraCient
     */
    public JDialogRegistraCient(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        SwingUtilities.getRootPane(registra).setDefaultButton(registra); 
        
        client_name.setText(System.getProperty("user.name") + " " + SystemUtils.getHostname());
//        os.setText(System.getProperty("os.name") + " " + System.getProperty("os.version"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        client_name = new javax.swing.JTextField();
        registra = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrazione postazione");

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getSize()+2f));
        jLabel1.setText("Nome postazione");

        client_name.setColumns(20);
        client_name.setFont(client_name.getFont().deriveFont(client_name.getFont().getSize()+2f));

        registra.setFont(registra.getFont().deriveFont(registra.getFont().getSize()+2f));
        registra.setText("Registra");
        registra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registraActionPerformed(evt);
            }
        });

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getSize()+4f));
        jLabel4.setText("La prima volta che ti connetti devi registrare la postazione");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(client_name, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(registra))
                    .add(jLabel4))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(jLabel4)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(client_name, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(registra))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registraActionPerformed
        //http://www.demo.tnx.it/invoicex_rest/?db=inv_test_sync_master&c=dump&m=registraClient&os=Windows&version=10.0.0&model=HPoquellochetipare                    

        try {
            String out = Sync.registraClient(client_name.getText());

            JSONParser p = new JSONParser();
            JSONObject outo = (JSONObject) p.parse(out);

            if (cu.toBoolean(outo.get("esito"))) {
                idclient = cu.i(outo.get("id"));

                DatiRegistrazione dr = new Sync.DatiRegistrazione();
                dr.id = idclient;
                dr.client_name = client_name.getText();
                Sync.dati_registrazione = dr;
                
                esito = true;
                dispose();

            } else {
                String errore = cu.s(outo.get("errore"));
                Boolean duplicato = cu.toBoolean(outo.get("duplicato"));
                if (duplicato) {
                    SwingUtils.showInfoMessage(this, "Il nome '" + client_name.getText() + "' è già stato usato, provane un altro");
                } else {
                    SwingUtils.showErrorMessage(this, "Errore durante la registrazione\nErrore:" + errore, true);
                }
            }
        } catch(Exception ex) {
            SwingUtils.showExceptionMessage(this, ex);
        }
        
    }//GEN-LAST:event_registraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogRegistraCient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogRegistraCient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogRegistraCient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogRegistraCient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogRegistraCient dialog = new JDialogRegistraCient(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField client_name;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton registra;
    // End of variables declaration//GEN-END:variables
}
