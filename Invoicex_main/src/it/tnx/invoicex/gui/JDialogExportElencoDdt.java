/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDialogStampaArticoli.java
 *
 * Created on 21-nov-2008,com 9.06.21
 */
package it.tnx.invoicex.gui;

import it.tnx.Db;
import gestioneFatture.*;
import it.tnx.commons.DateUtils;
import it.tnx.commons.DbUtils;
import it.tnx.commons.KeyValuePair;
import it.tnx.commons.SwingUtils;
import it.tnx.dbeans.JTableDb;
import it.tnx.dbeans.pdfPrint.PrintSimpleTable;
import java.io.File;
import java.sql.ResultSet;
import java.sql.Types;
import java.text.SimpleDateFormat;
import java.util.Vector;

/**
 *
 * @author mceccarelli
 */
public class JDialogExportElencoDdt extends javax.swing.JDialog {

    private JTableDb griglia;

    /** Creates new form JDialogStampaArticoli */
    public JDialogExportElencoDdt(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        dal.setFormats(new SimpleDateFormat("dd/MM/yyyy"));
        al.setFormats(new SimpleDateFormat("dd/MM/yyyy"));

        comCliFor.dbAddElement("<tutti>", "*");
        comCliFor.dbOpenList(Db.getConn(), "SELECT ragione_sociale, codice FROM clie_forn ORDER BY ragione_sociale");

        causali.dbAddElement("<tutte>", "*");
        causali.dbOpenList(Db.getConn(), "SELECT distinct causale_trasporto, causale_trasporto FROM test_ddt ORDER BY causale_trasporto");

        Vector v = new Vector();
        v.add(new KeyValuePair("pdf", "PDF"));
        v.add(new KeyValuePair("html", "HTML"));
        v.add(new KeyValuePair("xls", "EXCEL"));
        v.add(new KeyValuePair("csv", "CSV"));
        SwingUtils.initJComboFromKVList(formato, v);

        v = new Vector();
        v.add(new KeyValuePair("t.anno, t.serie, t.numero", "Numero"));
        v.add(new KeyValuePair("t.data, t.anno, t.serie, t.numero", "Data, Numero"));
        v.add(new KeyValuePair("cf.ragione_sociale, t.anno, t.serie, t.numero", "Cliente/Fornitore, Numero"));
        SwingUtils.initJComboFromKVList(ordine, v);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stampa = new javax.swing.JButton();
        annulla = new javax.swing.JButton();
        tipo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        formato = new javax.swing.JComboBox();
        dal = new org.jdesktop.swingx.JXDatePicker();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        al = new org.jdesktop.swingx.JXDatePicker();
        jLabel7 = new javax.swing.JLabel();
        comCliFor = new tnxbeans.tnxComboField();
        jLabel2 = new javax.swing.JLabel();
        ordine = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        fatturato = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        causali = new tnxbeans.tnxComboField();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Elenco DDT");
        setMinimumSize(new java.awt.Dimension(412, 215));

        stampa.setFont(stampa.getFont().deriveFont(stampa.getFont().getStyle() | java.awt.Font.BOLD));
        stampa.setText("Esporta");
        stampa.addActionListener(formListener);

        annulla.setText("Annulla");
        annulla.addActionListener(formListener);

        tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Vendita", "Acquisto" }));
        tipo.setSelectedItem("Vendita");
        tipo.addActionListener(formListener);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Origine");
        jLabel1.setPreferredSize(new java.awt.Dimension(80, 14));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Formato Stampa");
        jLabel5.setPreferredSize(new java.awt.Dimension(80, 14));

        formato.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Dal");
        jLabel3.setPreferredSize(new java.awt.Dimension(80, 14));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Al");
        jLabel4.setPreferredSize(new java.awt.Dimension(80, 14));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Cliente/Fornitore");
        jLabel7.setPreferredSize(new java.awt.Dimension(80, 14));

        comCliFor.setDbDescCampo("");
        comCliFor.setDbNomeCampo("");
        comCliFor.setDbTipoCampo("");
        comCliFor.setDbTrovaMentreScrive(true);
        comCliFor.addItemListener(formListener);
        comCliFor.addFocusListener(formListener);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Ordinamento");
        jLabel2.setPreferredSize(new java.awt.Dimension(80, 14));

        ordine.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Fatturato");
        jLabel6.setPreferredSize(new java.awt.Dimension(80, 14));

        fatturato.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tutti", "Sì", "Sì e Parziali", "Parziali", "No", " " }));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Causale trasporto");
        jLabel8.setPreferredSize(new java.awt.Dimension(80, 14));

        causali.setDbDescCampo("");
        causali.setDbNomeCampo("");
        causali.setDbTipoCampo("");
        causali.setDbTrovaMentreScrive(true);
        causali.addItemListener(formListener);
        causali.addFocusListener(formListener);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(tipo, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(comCliFor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 233, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(formato, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(ordine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                                .add(org.jdesktop.layout.GroupLayout.LEADING, dal, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .add(org.jdesktop.layout.GroupLayout.LEADING, al, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))))
                                    .add(layout.createSequentialGroup()
                                        .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(fatturato, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                            .add(31, 31, 31))
                        .add(layout.createSequentialGroup()
                            .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                            .addContainerGap())
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                            .add(jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(causali, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 233, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(127, 127, 127)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(annulla)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(stampa)
                        .addContainerGap())))
        );

        layout.linkSize(new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel7}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(tipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(comCliFor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(dal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(al, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(fatturato, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(causali, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ordine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(formato, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 74, Short.MAX_VALUE)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(stampa)
                    .add(annulla))
                .addContainerGap())
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.ItemListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == stampa) {
                JDialogExportElencoDdt.this.stampaActionPerformed(evt);
            }
            else if (evt.getSource() == annulla) {
                JDialogExportElencoDdt.this.annullaActionPerformed(evt);
            }
            else if (evt.getSource() == tipo) {
                JDialogExportElencoDdt.this.tipoActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == comCliFor) {
                JDialogExportElencoDdt.this.comCliForFocusLost(evt);
            }
            else if (evt.getSource() == causali) {
                JDialogExportElencoDdt.this.causaliFocusLost(evt);
            }
        }

        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            if (evt.getSource() == comCliFor) {
                JDialogExportElencoDdt.this.comCliForItemStateChanged(evt);
            }
            else if (evt.getSource() == causali) {
                JDialogExportElencoDdt.this.causaliItemStateChanged(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void stampaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stampaActionPerformed
        //stampa
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));

        int[] headerWidth = null;

        String tabella = tipo.getSelectedItem().equals("Acquisto") ? "test_ddt_acquisto" : "test_ddt";

        String sql = "SELECT t.data, CONCAT(t.serie,t.numero) as numero";
        if (tabella.equals("test_ddt")) {
            sql += ", cast(cf.codice as char(10)) as 'Cod. Cliente', cf.ragione_sociale as 'Cliente'";
        } else {
            sql += ", cast(cf.codice as char(10)) as 'Cod. Fornitore', cf.ragione_sociale as 'Fornitore'";
        }
        sql += ", t.causale_trasporto as 'Causale trasporto', IFNULL(t.evaso, '') as 'Fatturato',  t.totale_imponibile as 'Totale Imponibile', t.totale_iva as 'Iva', t.totale as 'Totale' ";
        sql += ", IFNULL(t.acconto, 0) as 'acconto'";
        sql += ", t.totale - IFNULL(t.acconto, 0) as 'Totale da pagare'";
        sql += " FROM " + tabella + " t LEFT JOIN clie_forn cf";
        if (tabella.equals("test_ddt")) {
            sql += " ON t.cliente = cf.codice ";
        } else {
            sql += " ON t.fornitore = cf.codice ";
        }

        sql += " WHERE 1 = 1 ";

        if (dal.getDate() != null) {
            sql += " AND data >= " + DbUtils.pc2(dal.getDate(), Types.DATE);
        }
        if (al.getDate() != null) {
            sql += " AND data <= " + DbUtils.pc2(al.getDate(), Types.DATE);
        }
        
        if (fatturato.getSelectedItem().equals("Sì")) {
            sql += " and IFNULL(t.evaso, '') = 'S'";
        } else if (fatturato.getSelectedItem().equals("No")) {
            sql += " and (IFNULL(t.evaso, '') = '' or IFNULL(t.evaso, '') = 'N')";
        } else if (fatturato.getSelectedItem().equals("Sì e Parziali")) {
            sql += " and (IFNULL(t.evaso, '') = 'S' or IFNULL(t.evaso, '') = 'P')";
        } else if (fatturato.getSelectedItem().equals("Parziali")) {
            sql += " and (IFNULL(t.evaso, '') = 'P'";
        }

        if (causali.getSelectedIndex() > 0) {
            sql += " and t.causale_trasporto = '" + causali.getSelectedKey() + "'";
        }

        if (comCliFor.getSelectedIndex() > 0) {
            sql += " and cf.codice = '" + comCliFor.getSelectedKey() + "'";
        }
        
        sql += " ORDER BY " + ((KeyValuePair) ordine.getSelectedItem()).key;

        ResultSet rs = null;
        try {
            System.out.println("sql:\n" + sql);
            rs = DbUtils.tryOpenResultSetEditable(Db.conn, sql);
        } catch (Exception ex) {
            ex.printStackTrace();
            this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            SwingUtils.showErrorMessage(this, ex.getMessage());
            return;
        }

        PrintSimpleTable print = new PrintSimpleTable(rs);
        print.totali = true;
        String caption = "Elenco DDT";
        String caption2 = "";
        try {
            ResultSet r = Db.openResultSet("select ragione_sociale from dati_azienda");
            if (r.next()) {
                caption2 += r.getString(1);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        if (caption2.length() > 0) {
            caption2 += " - ";
        }
        caption2 += tipo.getSelectedItem();
        if (comCliFor.getSelectedIndex() > 0) {
            caption2 += "\n" + comCliFor.getSelectedItem();
        }
        caption2 += "\nDal: " + DateUtils.formatDate(dal.getDate()) + " Al: " + DateUtils.formatDate(al.getDate());

        headerWidth = new int[]{10, 10, 10, 40, 20, 10, 10, 10, 10, 10, 10};

        if (((KeyValuePair) formato.getSelectedItem()).key.toString().equalsIgnoreCase("pdf")) {
            print.print(caption, headerWidth, ((KeyValuePair) formato.getSelectedItem()).key.toString(), caption2, "", -2);
            Util.start("tempStampa.pdf");
        } else if (((KeyValuePair) formato.getSelectedItem()).key.toString().equalsIgnoreCase("xls")) {
            String nomeFile = print.printExcel(caption, headerWidth, caption2, "");
            Util.start(nomeFile);
        } else if (((KeyValuePair) formato.getSelectedItem()).key.toString().equalsIgnoreCase("csv")) {
            String nomeFile = print.printCsv(caption, headerWidth, caption2, "");
            File fdir = new File(new File(nomeFile).getAbsolutePath());
            fdir = fdir.getParentFile();
            System.out.println("fdir:" + fdir);
            Util.start(fdir.getAbsolutePath());
        } else {
            print.print(caption, headerWidth, ((KeyValuePair) formato.getSelectedItem()).key.toString(), caption2, "");
            Util.start("tempStampa.html");
        }
        try {
            rs.getStatement().close();
            rs.close();
        } catch (Exception e) {
        }

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_stampaActionPerformed

    private void annullaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annullaActionPerformed
        dispose();
    }//GEN-LAST:event_annullaActionPerformed

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
//        if(tipo.getSelectedItem().equals("Acquisto")){
//            comCliFor.setEnabled(false);
//            Vector v = new Vector();
//            v.add(new KeyValuePair("clie.codice", "codice cliente/fornitore"));
//            v.add(new KeyValuePair("clie.ragione_sociale", "ragione sociale cliente/fornitore"));
//            SwingUtils.initJComboFromKVList(ordine, v);
//        } else {
//            comCliFor.setEnabled(true);
//            Vector v = new Vector();
//            v.add(new KeyValuePair("clie.codice", "codice cliente/fornitore"));
//            v.add(new KeyValuePair("clie.ragione_sociale", "ragione sociale cliente/fornitore"));
//            v.add(new KeyValuePair("agen.id, clie.codice", "codice agente, codice cliente/fornitore"));
//            v.add(new KeyValuePair("agen.nome, clie.ragione_sociale", "nome agente, ragione sociale cliente"));
//            SwingUtils.initJComboFromKVList(ordine, v);
//        }
    }//GEN-LAST:event_tipoActionPerformed

    private void comCliForFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comCliForFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_comCliForFocusLost

    private void comCliForItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comCliForItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_comCliForItemStateChanged

    private void causaliItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_causaliItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_causaliItemStateChanged

    private void causaliFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_causaliFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_causaliFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDialogExportElencoDdt dialog = new JDialogExportElencoDdt(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public org.jdesktop.swingx.JXDatePicker al;
    public javax.swing.JButton annulla;
    public tnxbeans.tnxComboField causali;
    public tnxbeans.tnxComboField comCliFor;
    public org.jdesktop.swingx.JXDatePicker dal;
    public javax.swing.JComboBox fatturato;
    public javax.swing.JComboBox formato;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JSeparator jSeparator1;
    public javax.swing.JComboBox ordine;
    public javax.swing.JButton stampa;
    public javax.swing.JComboBox tipo;
    // End of variables declaration//GEN-END:variables

    public JTableDb getGriglia() {
        return griglia;
    }

    public void setGriglia(JTableDb griglia) {
        this.griglia = griglia;
    }
}
